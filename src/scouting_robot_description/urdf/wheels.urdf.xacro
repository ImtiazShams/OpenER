<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

	<xacro:property name="angle_limit_cw"  value="${M_PI/4}" />
	<xacro:property name="angle_limit_ccw" value="${M_PI/4}" />

	<xacro:property name="ankle_offset_y" value="$(arg ankle_offset_y)" />
	<xacro:property name="ankle_offset_z" value="$(arg ankle_offset_z)" />

	<xacro:property name="wheel_offset_y" value="$(arg wheel_offset_y)" />
	<xacro:property name="wheel_offset_z" value="$(arg wheel_offset_z)" />

	<xacro:property name="wheel_radius" 		value="$(arg wheel_radius)" />
	<xacro:property name="wheel_inner_radius" 	value="$(arg wheel_inner_radius)" />
	<xacro:property name="wheel_length" value="$(arg wheel_length)" />
	<xacro:property name="wheel_mass" 	value="$(arg wheel_mass)" />
	
	<!-- from standard equation for thick-walled cylinder -->
	<xacro:property name="wheel_Ixx_Iyy" value="${wheel_mass*(3*(wheel_radius**2 + wheel_inner_radius**2) + wheel_length**2)/12}" />
	<xacro:property name="wheel_Izz" value="${wheel_mass*(wheel_radius**2 + wheel_inner_radius**2)/2}" />

	<xacro:macro name="wheel" params="name parent left front">
		<link name="${name}_ankle">
			<inertial>			
				<origin xyz="0 0.019 -0.0325" rpy="0 0 0" />
				<mass value="0.271" />
				<inertia ixx="0.01" iyy="0.01" izz="0.01" ixy="0" ixz="0" iyz="0" />
				<gravity>1</gravity>
			</inertial>
			<visual>
				<origin xyz="0 0 0" rpy="0 0 ${M_PI if left == -1 else 0}"/>
				<geometry>
					<mesh filename="package://scouting_robot_description/meshes/hub.dae" />
				</geometry>
				<material name="silver"/>
			</visual>
			<collision>
				<origin xyz="0 0 0" rpy="0 0 ${M_PI if left == -1 else 0}"/>
				<geometry>
					<mesh filename="package://scouting_robot_description/meshes/hub.dae" />
				</geometry>
			</collision>
		</link>

		<gazebo reference="${name}_ankle">
			<selfCollide>false</selfCollide>
		</gazebo>

		<link name="${name}_wheel">
			<inertial>
				<!-- based on thick-walled cylinder -->
				<origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
				<mass value="1.24" />
				<inertia ixx="${wheel_Ixx_Iyy}" iyy="${wheel_Ixx_Iyy}"  izz="${wheel_Izz}" ixy="0.0" ixz="0.0" iyz="0.0" />
				<gravity>1</gravity>
			</inertial>
			<visual>
				<xacro:if value="${left == -1}">
					<origin rpy="0 0 ${M_PI}" />
				</xacro:if>
				<geometry>					
					<xacro:if value="${left == -1}">
						<mesh filename="package://scouting_robot_description/meshes/r_wheel.dae"/>
					</xacro:if>
					<xacro:if value="${left == 1}">
						<mesh filename="package://scouting_robot_description/meshes/l_wheel.dae"/>
					</xacro:if>
				</geometry>
				
			</visual>
			<collision>
				<origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
				<geometry>
					<cylinder radius="${wheel_radius}" length="${wheel_length}" />
				</geometry>
			</collision>
		</link>

		<gazebo reference="${name}_wheel">
			<selfCollide>false</selfCollide>
		</gazebo>
			Steering with transmissions for gazebo 
		<joint name="${name}_steering_joint" type="revolute">
			<parent link="${parent}" />
			<child link="${name}_ankle" />
			<axis xyz="0 0 1" />
			<origin xyz="0 ${left*ankle_offset_y} -${ankle_offset_z}" />
			<limit lower="-${angle_limit_ccw}" upper="${angle_limit_cw}" effort="7" velocity="15" />
		<!-- guesses -->
		</joint>
		
		<joint name="${name}_wheel_joint" type="continuous">
			<parent link="${name}_ankle" />
			<child link="${name}_wheel" />
			<axis xyz="0 1 0" />
			<origin xyz="0 ${left*wheel_offset_y} -${wheel_offset_z}" />
			<limit effort="10" velocity="5"/>
		</joint>
<!--  -->
		<transmission name="${name}_steering_trans">
			<type>transmission_interface/SimpleTransmission</type>			
			<joint name="${name}_steering_joint">
				<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
			</joint>			
			<actuator name="${name}_steering_motor" >
				<hardwareInterface>PositionJointInterface</hardwareInterface>
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
		</transmission>
     

  		<transmission name="${name}_wheel_transmission">
			<type>transmission_interface/SimpleTransmission</type>			
			<joint name="${name}_wheel_joint">
				<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
			</joint>
			<actuator name="${name}_wheel_motor" >
				<hardwareInterface>VelocityJointInterface</hardwareInterface>
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
		</transmission>
		

	</xacro:macro>
</robot>
